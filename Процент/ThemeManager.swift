import SwiftUI
import UIKit

// –¢–∏–ø—ã –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º
enum ThemeType: String, CaseIterable, Identifiable {
    case classic, modern
    var id: String { rawValue }

    /// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —Ç–µ–º—ã - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–∞
    var displayName: String {
        switch self {
        case .classic: return LocalizationManager.shared.localizedString("classic")
        case .modern:  return LocalizationManager.shared.localizedString("modern")
        }
    }

    /// –ò–º—è –ø—Ä–µ–≤—å—é-–∫–∞—Ä—Ç–∏–Ω–∫–∏ (–¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—ã–±–æ—Ä–∞)
    var previewImageName: String {
        switch self {
        case .classic: return "classic_preview"
        case .modern:  return "modern_preview"
        }
    }

    /// –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç—É—Ä—ã —Ñ–æ–Ω–∞ (–∫–∞–∫ –≤ –∞—Å—Å–µ—Ç–∞—Ö)
    var backgroundTextureName: String {
        switch self {
        case .classic: return "classic_keyboard_bg_texture"
        case .modern:  return "modern_keyboard_bg_texture"
        }
    }
    
    /// –ò–º—è —Ç–µ–∫—Å—Ç—É—Ä—ã –¥–ª—è –æ–±–ª–∞—Å—Ç–∏ –≤–∞–ª—é—Ç
    var currencyTextureName: String {
        switch self {
        case .classic: return "classic_currency_bg_texture"
        case .modern: return "modern_currency_bg_texture"
        }
    }

    /// –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ (—á—ë—Ä–Ω—ã–π –¥–ª—è —Å–≤–µ—Ç–ª–æ–π, –±–µ–ª—ã–π –¥–ª—è —Ç—ë–º–Ω–æ–π)
    var textColor: Color {
        switch self {
        case .classic: return .black
        case .modern:  return .white
        }
    }

    /// –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–º–∞ —Ç—ë–º–Ω–æ–π
    var isDark: Bool {
        self == .modern
    }
    
    var backgroundColor: Color {
        switch self {
        case .classic: return Color(UIColor.systemBackground)
        case .modern:  return Color(red: 0.12, green: 0.12, blue: 0.12)
        }
    }
    
    var textFieldBG: Color {
        switch self {
        case .classic: return Color(UIColor.secondarySystemBackground)
        case .modern:  return Color(red: 0.10, green: 0.15, blue: 0.25)
        }
    }
    
    var buttonBG: Color {
        switch self {
        case .classic: return Color(red: 0.90, green: 0.90, blue: 0.90)
        case .modern:  return Color(red: 0.16, green: 0.32, blue: 0.54)
        }
    }
    
    var keyboardBG: Color {
        switch self {
        case .modern: return Color(red: 0.25, green: 0.25, blue: 0.25)
        case .classic: return Color(red: 0.90, green: 0.90, blue: 0.90)
        }
    }
}

final class ThemeManager: ObservableObject {
    @Published var currentTheme: ThemeType
    @Published var isChangingTheme: Bool = false

    private let key = "selectedTheme"

    init() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Ç–µ–º—ã –∏–ª–∏ –≤—ã–±–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        let saved = UserDefaults.standard.string(forKey: key) ?? ThemeType.classic.rawValue
        currentTheme = ThemeType(rawValue: saved) ?? .classic
    }

    /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ColorScheme –¥–ª—è SwiftUI (.light –∏–ª–∏ .dark)
    var colorScheme: ColorScheme {
        currentTheme.isDark ? .dark : .light
    }

    /// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã: —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±–æ—Ä, —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Å–º–µ–Ω—ã
    func selectTheme(_ theme: ThemeType) {
        guard currentTheme != theme else { return }

        print("[ThemeManager] üé® –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã: \(currentTheme.rawValue) ‚Üí \(theme.rawValue)")
        
        // –ù–∞—á–∞–ª–æ —Å–º–µ–Ω—ã —Ç–µ–º—ã
        isChangingTheme = true

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–º—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ UserDefaults
        currentTheme = theme
        UserDefaults.standard.set(theme.rawValue, forKey: key)
        UserDefaults.standard.synchronize() // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        
        print("[ThemeManager] ‚úÖ –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: \(currentTheme.rawValue)")
        print("[ThemeManager] üìÅ backgroundTexture: \(currentTheme.backgroundTextureName)")
        print("[ThemeManager] üìÅ currencyTexture: \(currentTheme.currencyTextureName)")

        // –ß–µ—Ä–µ–∑ 0.5 —Å–µ–∫—É–Ω–¥—ã —Å–∫—Ä—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã..." —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
            withAnimation {
                self.isChangingTheme = false
            }
        }
    }
    
    // –ü—Ä–æ–∫—Å–∏—Ä—É—é—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
    var background: Color { currentTheme.backgroundColor }
    var textFieldBG: Color { currentTheme.textFieldBG }
    var textColor: Color { currentTheme.textColor }
    var buttonBG: Color { currentTheme.buttonBG }
    var keyboardBG: Color { currentTheme.keyboardBG }
    var currencyTextureName: String { currentTheme.currencyTextureName }
    
    var buttonText: Color { currentTheme.textColor }
    var keyboardText: Color { buttonText }
}



